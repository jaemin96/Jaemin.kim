@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/static/pretendard-dynamic-subset.min.css');

/* navigation */
@layer components {
  .navigator {
  }

  .navigator-item {
    @apply transition text-black-500 hover:text-black-100;
  }

  .navigator-item.selected {
    @apply text-black-base;
  }

  .slide-modal .navigator-item.selected {
    @apply border-b-2 border-black-base;
  }
}

html {
  min-width: 356px;
  overflow-x: hidden;
}

body {
  font-family: 'pretendard variable', sans-serif;
  overflow-x: hidden;
}

/* ========= SIDE =========== */
#side .side_wrapper .tag-wrapper {
  max-width: 55%;
  max-height: 7rem;
  flex-wrap: wrap;
  margin: auto;
  overflow-y: scroll;
  -ms-overflow-style: none;
  scrollbar-width: none;
}

#side .side_wrapper .tag-wrapper::-webkit-scrollbar {
  display: none;
}

#side .side_wrapper .side_wrapper-social ul .social-icons svg:hover {
  fill: rgba(0, 0, 0, 0.3);
  transition: 0.1s ease-in-out;
}

#side .side_wrapper .tag-wrapper .tag::before {
  content: '#';
}

/* ========= Content =========== */
#content {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

#content::-webkit-scrollbar {
  display: none;
}

#content #content-title {
  position: relative;
}

#content #content-title::before {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  height: 0.15rem;
  width: 1.5rem;
  background-color: #254edb;
}

#content .expand-wrapper .icon-container {
  transition: transform 0.3s ease-in-out;
}

#content .expand-wrapper .icon-container .expand-icon {
  background: url('/icon/right.svg') center center/cover no-repeat;
}

#content .expand-wrapper.expanded .icon-container {
  transform: rotate(90deg);
}

#content .expand-wrapper .expanded-wrapper {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  transition: max-height 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

#content .expand-wrapper.expanded .expanded-wrapper {
  max-height: 50rem;
  opacity: 1;
}

#content .skill-list li:not(:last-child)::after {
  content: ',';
}
